<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <property name="LOG_HOME"  value="./logs/app"></property>

    <property name="consoleLayoutPattern"
              value="[%p] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t][%c]:%L - %m %n" />

    <property name="fileLayoutPattern"
              value="[%p] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t][%c]:%L - %m %n" />

    <!-- appender是configuration的子节点，是负责写日志的组件。 -->
    <!-- ConsoleAppender：把日志输出到控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${consoleLayoutPattern}</pattern>
        </layout>
    </appender>

    <!-- RollingFileAppender：滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/info.log</file>
        <!-- rollingPolicy:当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名。 -->
        <!-- TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/info.%d.%i.log</fileNamePattern>
            <!-- 每产生一个日志文件，该日志文件的保存期限为30天 -->
            <maxHistory>30</maxHistory>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <timeBasedFileNamingAndTriggeringPolicy  class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- maxFileSize:这是活动文件的大小，默认值是10MB -->
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${fileLayoutPattern}</Pattern>
        </layout>
    </appender>

    <!-- 异步输出 -->
    <appender name ="ASYNC_INFO" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="INFO_FILE"/>
    </appender>

    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/error.%d.%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <timeBasedFileNamingAndTriggeringPolicy  class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- maxFileSize:这是活动文件的大小，默认值是10MB -->
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${fileLayoutPattern}</Pattern>
        </layout>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>


    <!-- 定义本地环境日志级别 -->
    <springProfile name="dev">
        <logger name="com.sw.sx" level="DEBUG"/>
        <root>
            <level value="DEBUG" />
            <appender-ref ref="STDOUT" />
            <appender-ref ref="ASYNC_INFO" />
            <appender-ref ref="ERROR_FILE" />
        </root>
    </springProfile>

    <springProfile name="bist">
        <logger name="com.sw.sx" level="DEBUG"/>
        <root>
            <level value="INFO" />
            <appender-ref ref="STDOUT" />
            <appender-ref ref="ASYNC_INFO" />
            <appender-ref ref="ERROR_FILE" />
        </root>
    </springProfile>

    <!-- 定义测试环境日志级别 -->
    <springProfile name="test">
        <logger name="com.sw.sx" level="DEBUG"/>
        <root>
            <level value="INFO" />
            <appender-ref ref="STDOUT" />
            <appender-ref ref="ASYNC_INFO" />
            <appender-ref ref="ERROR_FILE" />
        </root>
    </springProfile>

    <!-- 定义生产环境日志级别 -->
    <springProfile name="prod">
        <logger name="com.sw.sx" level="DEBUG"/>
        <root>
            <level value="INFO" />
            <appender-ref ref="STDOUT" />
            <appender-ref ref="ASYNC_INFO" />
            <appender-ref ref="ERROR_FILE" />
        </root>
    </springProfile>

</configuration>